name: "Upload state to S3"
description: "Upload state to S3"
inputs:
  os:
    description: "OS"
    required: true
  browser:
    description: "Web browser"
    required: true
  path:
    description: "Path of state file"
    required: true
  expiry_duration:
    description: "Expiry duration (in days) of state"
    required: false
    default: 0
  aws_access_key_id:
    description: "AWS access key ID"
    required: true
  aws_secret_access_key:
    description: "AWS secret access key"
    required: true
  aws_region:
    description: "AWS region"
    required: true

runs:
  using: "composite"
  steps:
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
    - run: |
        if [[ ${{ inputs.os }} == 'macos-latest' ]]
        then
            echo "inside macos"
            checkpoint=$(date -v-${{ inputs.expiry_duration }}d +'%Y-%m-%d')
        else
            echo "inside windows/ubuntu"
            checkpoint=$(date --date="${{ inputs.expiry_duration }} days ago" +'%Y-%m-%d')
        fi
        echo "Checkpoint: $checkpoint"

        last_updated=$(aws s3 ls s3://torus-e2e-tests/${{ inputs.path }}/${{ inputs.browser }}.json | awk '{print $1}')
        echo "Last updated: $last_updated"

        if [[ "$last_updated" > "$checkpoint" ]]
        then
              echo "State is still new, no need to update"
        else
            echo "State is old, need to refresh"
            aws s3 cp ${{ inputs.path }}/${{ inputs.browser }}.json s3://torus-e2e-tests/${{ inputs.path }}/test/
        fi
      shell: bash
