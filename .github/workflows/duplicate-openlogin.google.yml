name: Duplicate - OpenLogin - Facebook Login

on:
  push
  # schedule:
  #   - cron: "*/30 * * * *"
  # workflow_dispatch:

env:
  NODE_VERSION: 16

jobs:
  run-tests:
    name: Duplicate - Run OpenLogin - Facebook Login tests
    strategy:
      matrix:
        env: [prod]
        browser: [chromium]
        os: [macos-latest]
        # include:
        #   - os: macos-latest
        #     browser: webkit
        #     env: prod

    runs-on: ${{ matrix.os }}
    env:
      PLATFORM: ${{ matrix.env }}
    outputs:
      conclusion: ${{ steps.run-tests.conclusion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: setup-node
        name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
        continue-on-error: true

      - id: yarn-install
        name: Install Node.js dependencies
        if: steps.setup-node.outcome == 'success'
        run: exit 1
        # run: yarn install --frozen-lockfile
        continue-on-error: true
        

      - id: yarn-install-deps
        name: Install Ubuntu dependencies
        if: steps.yarn-install.outcome == 'success' && startsWith(matrix.os, 'ubuntu')
        run: yarn run playwright install-deps ${{ matrix.browser }}
        continue-on-error: true

      - id: configure-aws
        name: Configure AWS credentials
        if: steps.yarn-install.outcome == 'success' && steps.yarn-install-deps.outcome != 'failure'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        continue-on-error: true

      - id: download-state
        name: Download remote browser snapshots
        if: steps.configure-aws.outcome == 'success'
        run: aws s3 cp s3://torus-e2e-tests/openlogin/login-with-facebook/ openlogin/login-with-facebook/ --recursive
        continue-on-error: true

      - id: run-tests
        name: Run tests
        if: steps.download-state.outcome == 'success'
        run: yarn run playwright test --config openlogin/login-with-facebook/index.config.ts --project ${{ matrix.browser }}

      - id: telegram-alert
        name: Alert to telegram channel
        # needs: run-tests
        if: always()
        run: |
          echo ${{ steps.run-tests.outcome }}
          echo ${{ steps.run-tests.result }}
          if [[ ${{ steps.run-tests.outcome }} != 'success' ]]
          then
              echo "Test Failed, sending telegram alert"
          else
              echo "Test Passed, no alert!"
          fi
        shell: bash
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-on-${{ matrix.browser }}-${{ matrix.os }}
          path: test-results/
          if-no-files-found: ignore
  # curl "https://api.telegram.org/bot${{secrets.BOT_API_TOKEN}}/sendMessage?chat_id=${{secrets.CHAT_ID}}&text=LoginWithFacebook%0ATestresult=Failed%0AOS=${{matrix.os}}%0Abrowser=${{matrix.browser}}%0AEnvironment=${{matrix.env}}%0AJob=${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}"

  # update-status:
  #   name: Update OpenLogin - Facebook Login status
  #   needs: run-tests
  #   if: (success() || failure()) && (needs.run-tests.outputs.conclusion != 'skipped')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Update status
  #       uses: fjogeleit/http-request-action@master
  #       with:
  #         url: https://api.statuspage.io/v1/pages/${{ secrets.PAGE_ID }}/components/${{ secrets.FACEBOOK_COMPONENT_ID }}
  #         customHeaders: '{ "Authorization": "OAuth ${{ secrets.STATUS_PAGE_API_KEY }}" }'
  #         method: PATCH
  #         contentType: "application/json"
  #         timeout: 10000
  #         data: >-
  #           { "component": { "status": "${{ needs.run-tests.result == 'success' && 'operational' || 'major_outage' }}" } }
