name: OpenLogin - TorusE2ETests

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

env:
  NODE_VERSION: 16

jobs:
  run-tests:
    name: Run OpenLogin - tests
    strategy:
      matrix:
        env: [prod, cyan]
        browser: [firefox, chromium]
        cloudBuild: [TorusE2ETests, TorusE2ETests-SG]
    runs-on: ubuntu-latest
    env:
      PLATFORM: ${{ matrix.env }}
    outputs:
      conclusion: ${{ steps.run-tests.conclusion }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        continue-on-error: true

      - id: run-tests
        name: "AWS CodeBuild run build"
        uses: aws-actions/aws-codebuild-run-build@v1.0.8
        with:
          project-name: ${{ matrix.cloudBuild }}
          buildspec-override: ./buildspec.yml
          env-vars-for-codebuild: |
            PLATFORM,
            MAILOSAUR_API_KEY,
            MAILOSAUR_SERVER_ID,
            MAILOSAUR_SERVER_DOMAIN,
            FB_TEST_USER_EMAIL,
            FB_TEST_USER_PASS,
            FB_TEST_USER_NAME,
            TWITTER_ACCOUNT,
            TWITTER_PASSWORD
        env:
          PLATFORM: ${{ matrix.env }}
          MAILOSAUR_API_KEY: ${{ secrets.MAILOSAUR_API_KEY }}
          MAILOSAUR_SERVER_ID: ${{ secrets.MAILOSAUR_SERVER_ID }}
          MAILOSAUR_SERVER_DOMAIN: ${{ secrets.MAILOSAUR_API_KEY }}
          FB_TEST_USER_EMAIL: ${{ secrets.FB_TEST_USER_EMAIL }}
          FB_TEST_USER_PASS: ${{ secrets.FB_TEST_USER_PASS }}
          FB_TEST_USER_NAME: ${{ secrets.FB_TEST_USER_NAME }}
          TWITTER_ACCOUNT: ${{ secrets.TWITTER_ACCOUNT }}
          TWITTER_PASSWORD: ${{ secrets.TWITTER_PASSWORD }}

      - id: telegram-notify
        name: Telegram Notify
        uses: appleboy/telegram-action@0.0.3
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_API_TOKEN }}
          message: Testresult=${{steps.run-tests.outcome}}%0AcloudBuild=${{matrix.cloudBuild}}%0Abrowser=${{matrix.browser}}%0AEnvironment=${{matrix.env}}%0AJob=${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-on-${{ matrix.browser }}-${{ matrix.cloudBuild }}
          path: test-results/
          if-no-files-found: ignore

  update-status:
    name: Update OpenLogin - Tests status
    needs: run-tests
    if: (success() || failure()) && (needs.run-tests.outputs.conclusion != 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Update status
        uses: fjogeleit/http-request-action@master
        with:
          url: https://api.statuspage.io/v1/pages/${{ secrets.PAGE_ID }}/components/${{ secrets.HOME_PAGE_COMPONENT_ID }}
          customHeaders: '{ "Authorization": "OAuth ${{ secrets.STATUS_PAGE_API_KEY }}" }'
          method: PATCH
          contentType: "application/json"
          timeout: 10000
          data: >-
            { "component": { "status": "${{ needs.run-tests.result == 'success' && 'operational' || 'major_outage' }}" } }
