name: WalletService - E2ETests

on:
  push:
    branches:
      - master
  schedule:
    - cron: "30 * * * *"
  workflow_dispatch:
    inputs:
      environment:
        description: "prod|beta|cyan|staging|testing|celeste|local"
        required: true
        default: "testing"

env:
  NODE_VERSION: 20

jobs:
  build:
    name: WalletService - E2ETests
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - env:
              PLATFORM: production
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Trigger tests
        env:
          FB_TEST_USER_EMAIL: ${{ secrets.FB_TEST_USER_EMAIL }}
          FB_2FA_TEST_USER_EMAIL: ${{ secrets.FB_2FA_TEST_USER_EMAIL }}
          FB_TEST_USER_PASS: ${{ secrets.FB_TEST_USER_PASS }}
          FB_TEST_USER_NAME: ${{ secrets.FB_TEST_USER_NAME }}
          GOOGLE_ACCOUNT: ${{ secrets.GOOGLE_ACCOUNT }}
          GOOGLE_PASSWORD: ${{ secrets.GOOGLE_PASSWORD }}
          GOOGLE_NAME: ${{ secrets.GOOGLE_NAME }}
          DISCORD_EMAIL: ${{ secrets.DISCORD_EMAIL }}
          DISCORD_PASSWORD: ${{ secrets.DISCORD_PASSWORD }}
          TWITTER_ACCOUNT: ${{ secrets.TWITTER_ACCOUNT }}
          TWITTER_PASSWORD: ${{ secrets.TWITTER_PASSWORD }}
          TWITTER_EMAIL: ${{ secrets.TWITTER_EMAIL }}
          CI: true
          CI_MODE: ${{ secrets.CI_MODE }}
          PLATFORM: ${{ matrix.env.PLATFORM }}
          APP_VERSION: "v3"
          GITHUB_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GITHUB_USER_PASSWORD: ${{ secrets.GIT_USER_PASSWORD }}
          SMS_MOBILE_NUMBER: ${{ secrets.SMS_MOBILE_NUMBER }}
          LOGIN_MOBILE_NUMBER: ${{ secrets.LOGIN_MOBILE_NUMBER }}
          BACKUP_PHRASE_PROD: ${{ secrets.BACKUP_PHRASE_PROD }}
          BACKUP_PHRASE_CYAN: ${{ secrets.BACKUP_PHRASE_CYAN }}
          BACKUP_PHRASE_AQUA: ${{ secrets.BACKUP_PHRASE_AQUA }}
          TESTMAIL_APP_APIKEY: ${{ secrets.TESTMAIL_APP_APIKEY }}
          MAIL_APP: ${{ secrets.MAIL_APP }}
        run: |
          echo "Platform: ${{ matrix.env.PLATFORM }}" && ipconfig getifaddr en0 && ls && npm install && npx playwright install && npm run walletservice:config

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          path: test-results/*
          if-no-files-found: ignore
      - name: Update Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_WS }}
          title: ${{ github.workflow}} - ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          status: ${{ job.status }}
          nocontext: true
